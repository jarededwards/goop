apiVersion: v1
kind: ServiceAccount
metadata:
  name: clustersecretstore-wait
  namespace: default
  annotations:
    argocd.argoproj.io/sync-wave: "16"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: clustersecretstore-wait
  annotations:
    argocd.argoproj.io/sync-wave: "16"
rules:
  - apiGroups: ["external-secrets.io"]
    resources: ["clustersecretstores"]
    verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: clustersecretstore-wait
  annotations:
    argocd.argoproj.io/sync-wave: "16"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: clustersecretstore-wait
subjects:
  - kind: ServiceAccount
    name: clustersecretstore-wait
    namespace: default
---
apiVersion: batch/v1
kind: Job
metadata:
  name: wait-clustersecretstore
  namespace: default
  annotations:
    argocd.argoproj.io/sync-wave: "16"
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
spec:
  ttlSecondsAfterFinished: 300
  template:
    spec:
      serviceAccountName: clustersecretstore-wait
      restartPolicy: OnFailure
      containers:
      - name: wait
        image: bitnami/kubectl:latest
        command:
        - /bin/bash
        - -c
        - |
          echo "Waiting for ClusterSecretStore je-kon-18-secret-store to be ready..."
          kubectl wait --for=condition=Ready clustersecretstore/je-kon-18-secret-store --timeout=300s
          echo "ClusterSecretStore je-kon-18-secret-store is ready!"