apiVersion: v1
kind: ServiceAccount
metadata:
  name: cert-manager-wait
  namespace: cert-manager
  annotations:
    argocd.argoproj.io/sync-wave: "21"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cert-manager-wait
  annotations:
    argocd.argoproj.io/sync-wave: "21"
rules:
  - apiGroups: ["apps"]
    resources: ["deployments"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cert-manager-wait
  annotations:
    argocd.argoproj.io/sync-wave: "21"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cert-manager-wait
subjects:
  - kind: ServiceAccount
    name: cert-manager-wait
    namespace: cert-manager
---
apiVersion: batch/v1
kind: Job
metadata:
  name: wait-cert-manager
  namespace: cert-manager
  annotations:
    argocd.argoproj.io/sync-wave: "21"
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
spec:
  ttlSecondsAfterFinished: 300
  template:
    spec:
      serviceAccountName: cert-manager-wait
      restartPolicy: OnFailure
      containers:
      - name: wait
        image: bitnami/kubectl:latest
        command:
        - /bin/bash
        - -c
        - |
          echo "Waiting for all deployments in cert-manager namespace to be ready..."
          kubectl wait --for=condition=available --all deployments -n cert-manager --timeout=600s
          echo "All cert-manager deployments are ready!"
          
          echo "Waiting for cert-manager CRDs to be established..."
          kubectl wait --for=condition=established crd/certificates.cert-manager.io --timeout=300s
          kubectl wait --for=condition=established crd/issuers.cert-manager.io --timeout=300s
          kubectl wait --for=condition=established crd/clusterissuers.cert-manager.io --timeout=300s
          echo "All cert-manager CRDs are established!"